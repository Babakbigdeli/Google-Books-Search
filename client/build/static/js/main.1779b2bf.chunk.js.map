{"version":3,"sources":["components/Navbar.jsx","components/Wrapper.jsx","utils/API.jsx","components/Form.jsx","components/SearchResults.jsx","pages/Search.jsx","components/SavedResults.jsx","pages/Saved.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","window","location","pathname","Wrapper","props","query","axios","get","console","log","then","result","data","post","id","delete","Form","htmlFor","onChange","handleChange","value","search","name","type","placeholder","onClick","handleSearch","SearchResults","books","map","book","key","src","image","alt","title","authors","description","event","saveBooks","href","link","rel","target","Search","state","setState","preventDefault","filter","googleId","API","alert","catch","err","response","results","items","volumeInfo","infoLink","imageLinks","thumbnail","this","length","Component","SavedResults","savedBooks","_id","deleteBook","Saved","getSavedBooks","error","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1779b2bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nfunction Navbar() {\r\n    return (\r\n\r\n\r\n        <nav className=\"navbar navbar-expand-lg text-light\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">ðŸ“– Google Books Search</Link>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/search\"\r\n                            className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\r\n                        > Search</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link\r\n                            to=\"/saved\"\r\n                            className={window.location.pathname === \"/saved\" ? \"nav-link active\" : \"nav-link\"}\r\n                        >Saved</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\" {...props} />;\r\n}\r\n\r\nexport default Wrapper;","import axios from \"axios\";\r\n\r\nexport default {\r\n  searchBook: function (query) {\r\n    return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n  },\r\n\r\n  getBooks: function () {\r\n    console.log(\"getBooks\");\r\n    return axios.get(\"/api/books\").then((result) => result.data);\r\n  },\r\n\r\n  saveBook: function (data) {\r\n    console.log(data);\r\n    return axios.post(\"/api/books\", data).then((result) => result.data);\r\n  },\r\n\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id).then((result) => result.data);\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\n\r\nfunction Form(props){\r\nreturn (\r\n  <div className=\"container\">\r\n  <form>\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"search\"><h2>Search and Save Books</h2></label>\r\n      <input\r\n        onChange={props.handleChange}\r\n        value={props.search}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search for a title\"\r\n        id=\"search\"\r\n      />\r\n      <button onClick={props.handleSearch} className=\"btn btn-dark mt-3 mb-5\">\r\n        Search\r\n        </button>\r\n    </div>\r\n  </form>\r\n  </div>\r\n);\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nconst SearchResults = (props) => {\r\n  return (\r\n    <div>\r\n      {props.books.map((book) => {\r\n        return (\r\n          <div key={book.id}>\r\n            <div className=\"card\">\r\n              <div className=\"card-image\">\r\n                <img src={book.image} alt={book.title} />\r\n              </div>\r\n              <p>{book.title}</p>\r\n              <p>by: {book.authors}</p>\r\n              <div className=\"content\">{book.description}</div>\r\n              <div>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"resultsbutton\"\r\n                  id={book.id}\r\n                  onClick={(event) => props.saveBooks(event)}\r\n                >\r\n                  Save\r\n                </button>\r\n                <a href={book.link} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                  <button type=\"button\" className=\"resultsbutton\">\r\n                    More info\r\n                  </button>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Form from \"../components/Form\";\r\nimport SearchResults from \"../components/SearchResults\";\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: \"\",\r\n    books: [],\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const query = event.target.value;\r\n    this.setState({ query });\r\n  };\r\n\r\n  saveBooks = (event) => {\r\n    event.preventDefault();\r\n\r\n    let data = this.state.books.filter(\r\n      (book) => book.id === event.target.googleId\r\n    );\r\n    data = data[0];\r\n    API.saveBook(data)\r\n      .then(alert(\"Your book has been saved!\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleSearch = (event) => {\r\n    event.preventDefault();\r\n    API.searchBook(this.state.query)\r\n      .then((response) => {\r\n        let results = response.data.items;\r\n\r\n        results = results.map((result) => {\r\n          result = {\r\n            googleId: result.id,\r\n            title: result.volumeInfo.title,\r\n            authors: result.volumeInfo.authors,\r\n            description: result.volumeInfo.description,\r\n            link: result.volumeInfo.infoLink,\r\n            image: result.volumeInfo.imageLinks.thumbnail,\r\n          };\r\n          return result;\r\n        });\r\n        this.setState({ books: results });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form\r\n          handleChange={this.handleChange}\r\n          handleSearch={this.handleSearch}\r\n        />\r\n        {this.state.books.length ? (\r\n          <div>\r\n            <h3 className=\"container\">Your Search Results</h3>\r\n            <SearchResults\r\n              books={this.state.books}\r\n              saveBooks={this.saveBooks}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <h3 className=\"container\">No books have been searched yet!</h3>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst SavedResults = (props) => {\r\n  return (\r\n    <div>\r\n      {props.books.map((savedBooks) => {\r\n        return (\r\n          <div key={savedBooks._id}>\r\n            <div>\r\n              <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                  <img src={savedBooks.image} alt={savedBooks.title} />\r\n                </div>\r\n                <p>{savedBooks.title}</p>\r\n                <p>by: {savedBooks.authors}</p>\r\n                <div className=\"description\">{savedBooks.description}</div>\r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"buttons\"\r\n                    id={savedBooks.id}\r\n                    onClick={() => props.deleteBook(savedBooks._id)}\r\n                  >\r\n                    {\" \"}\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n                <div>\r\n                  <a\r\n                    href={savedBooks.link}\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    <button type=\"button\" className=\"buttons\">\r\n                      Google Book\r\n                    </button>\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SavedResults;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport SavedResults from \"../components/SavedResults\";\r\n\r\nclass Saved extends Component {\r\n  state = {\r\n    savedBooks: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getSavedBooks();\r\n  }\r\n\r\n  getSavedBooks() {\r\n    API.getBooks()\r\n      .then((savedBooks) => this.setState({ savedBooks: savedBooks }))\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  deleteBook = (id) => {\r\n    API.deleteBook(id)\r\n      .then(() => this.getSavedBooks())\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h2>Saved books</h2>\r\n        <SavedResults\r\n          books={this.state.savedBooks}\r\n          deleteBook={this.deleteBook}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Saved;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Wrapper from \"./components/Wrapper\";\r\n\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar />\r\n          <Wrapper>\r\n            <Route exact path=\"/\" component={Search} />\r\n            <Route exact path=\"/search\" component={Search} />\r\n            <Route exact path=\"/saved\" component={Saved} />\r\n          </Wrapper>\r\n        </div>\r\n      </Router>\r\n    )\r\n  };\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}